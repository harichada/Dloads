=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2019.10.22 11:09:36 =~=~=~=~=~=~=~=~=~=~=~=
Using username "hchada".
Pre-authentication banner message from server:
| UNAUTHORIZED ACCESS TO ANY STATE OF CALIFORNIA COMPUTING SYSTEM CONTAINING US
>  GOVERNMENT OR STATE OF CALIFORNIA INFORMATION IS A CRIMINAL VIOLATION OF PEN
> AL CODE SECTION 502 AND/OR APPLICABLE FEDERAL LAW AND IS SUBJECT TO CIVIL AND
>  CRIMINAL SANCTIONS.
| 
| Whoever knowingly or intentionally accesses a computing system without author
> ization or exceeding authorized access, and by means of such conduct, obtains
> , alters, damages, destroys, or discloses information, or prevents authorized
>  use of any data or computing resource owned by or operated for the State of 
> California shall be subject to disciplinary action, prosecution or both. Use 
> in a manner other than as intended by the State of California may result in t
> he forfeiture of access privileges. All computing system activities may be re
> corded and monitored. Individuals using these systems expressly consent to su
> ch monitoring and shall have no expectation of privacy in their use. Evidence
>  of possible misconduct or abuse may be provided to appropriate officials and
> /or law enforcement. No warranty is made for the computing resources that are
>  subject to this policy. Additionally, the State of California takes no respo
> nsibility of damages for the intentional misuse of these resources by any par
> ty.
| 
End of banner message from server
Last login: Mon Oct 21 13:38:04 2019 from 169.2.108.102
UNAUTHORIZED ACCESS TO ANY STATE OF CALIFORNIA COMPUTING SYSTEM CONTAINING US GOVERNMENT OR STATE OF CALIFORNIA INFORMATION IS A CRIMINAL VIOLATION OF PENAL CODE SECTION 502 AND/OR APPLICABLE FEDERAL LAW AND IS SUBJECT TO CIVIL AND CRIMINAL SANCTIONS.

Whoever knowingly or intentionally accesses a computing system without authorization or exceeding authorized access, and by means of such conduct, obtains, alters, damages, destroys, or discloses information, or prevents authorized use of any data or computing resource owned by or operated for the State of California shall be subject to disciplinary action, prosecution or both. Use in a manner other than as intended by the State of California may result in the forfeiture of access privileges. All computing system activities may be recorded and monitored. Individuals using these systems expressly consent to such monitoring and shall have no expectation of privacy in their use. Evidence of possible misconduct or abuse may be provided to appropriate officials and/or law enforcement. No warranty is made for the computing resources that are subject to this policy. Additionally, the State of California takes no responsibility of damages for the intentional misuse of these resources by any party.

]0;hchada@CGDCSSL1047UL:~[?1034h[hchada@CGDCSSL1047UL ~]$ cd /[KEFS/ansible/
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ ls
ansible.cfg                    [0m[01;32mcontext.xml[0m       copyKeys.yml         CreatePartsDevOps.yml  [01;34mCustomerConnect[0m  fetchhostname.yml  inventorycc           ping.yml         servers.yml  users.yml
[01;34mapache[0m                         copy              copyKey.yml          CreateUser.retry       delApctl.yml     [01;34mfinal[0m              [01;31mmaster-cisreport.zip[0m  [01;34mpyscritps[0m        [01;32mserver.xml[0m   [01;32mweb.xml[0m
CCServers.yml                  copyBinaries.yml  cpyhttpd.yml         CreateUsers.yml        deploy1.yml      gitcommands.txt    passwd                script.yml       stopFW.yml   yumPackages.yml
[01;34mcis-rhel-ansible-audit-master[0m  copyKeys.retry    CreatePartition.yml  CreateUser.yml         [01;31mdevel.zip[0m        inventory          passwd.txt            [01;34mselfsignedcerts[0m  [01;34mtomcat[0m
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ cd final/
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/final[hchada@CGDCSSL1047UL final]$ ls
ConfigServers.yml  copyKey.yml  CreatePartitions.yml  CreateUsers.yml  installApache.yml  inventory  ldconfig.yml  servers.yml  sharedJava.yml  startApache.yml  yumPackages.yml
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/final[hchada@CGDCSSL1047UL final]$ cd ..
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ ls
ansible.cfg                    [0m[01;32mcontext.xml[0m       copyKeys.yml         CreatePartsDevOps.yml  [01;34mCustomerConnect[0m  fetchhostname.yml  inventorycc           ping.yml         servers.yml  users.yml
[01;34mapache[0m                         copy              copyKey.yml          CreateUser.retry       delApctl.yml     [01;34mfinal[0m              [01;31mmaster-cisreport.zip[0m  [01;34mpyscritps[0m        [01;32mserver.xml[0m   [01;32mweb.xml[0m
CCServers.yml                  copyBinaries.yml  cpyhttpd.yml         CreateUsers.yml        deploy1.yml      gitcommands.txt    passwd                script.yml       stopFW.yml   yumPackages.yml
[01;34mcis-rhel-ansible-audit-master[0m  copyKeys.retry    CreatePartition.yml  CreateUser.yml         [01;31mdevel.zip[0m        inventory          passwd.txt            [01;34mselfsignedcerts[0m  [01;34mtomcat[0m
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ mo[K[Kcat CreatePartti[K[Kition.yml 
- hosts:
      - "{{ var_host | default('devws') }}"
  become: true
  tasks:
     - name: Create LVM Partition # Creating Physical Volume and Volume Group
       parted:
            device: /dev/sdb
            number: 1
            flags: [ lvm ]
            state: present
     - name: Create Physical Volume (PV)
       lvg: 
         vg: datavg
         pvs: /dev/sdb1
         state: present
     - name: Create Logical Volumes appsVM
       lvol:
           vg: datavg
           lv: appsVM
           size: 10G
           state: present
     - name: Create LV sharedVM
       lvol:
          vg: datavg
          lv: sharedVM
          size: 20G
          state: present
     - name: Create LV logsVM
       lvol:
          vg: datavg
          lv: logsVM
          size: 10G
          state: present
     - name: Create LV apacheVM
       lvol: 
          vg: datavg
          lv: apacheVM
          size: 5G
          state: present
       when: "'ws' in inventory_hostname"
     - name: Create LV tomcatVM
       lvol:
          vg: datavg
          lv: tomcatVM
          size: 5G
          state: present
       when: "'as' in inventory_hostname"
     - name: Format LV appsVM   # Format Logical Volumes ext4
       filesystem:
               fstype: ext4
               dev: /dev/datavg/appsVM
               force: no
     - name: Format LV sharedVM
       filesystem:
               fstype: ext4
               dev: /dev/datavg/sharedVM
               force: no
     - name: Format LV logsVM
       filesystem:
               fstype: ext4
               dev: /dev/datavg/logsVM
               force: no
     - name: Format LV apacheVM
       filesystem:
               fstype: ext4
               dev: /dev/datavg/apacheVM
               force: no
       when: "'ws' in inventory_hostname"
     - name: Format LV tomcatVM
       filesystem:
               fstype: ext4
               dev: /dev/datavg/tomcatVM
               force: no
       when: "'as' in inventory_hostname"
     - name: Mount /forms/appsVM and make entry in /etc/fstab # Create mount points and mount Logical Volumes
       mount:
          path: /forms/apps
          src: /dev/datavg/appsVM
          fstype: ext4
          opts: defaults
          dump: 1
          passno: 2
          state: mounted
     - name: Mount /forms/sharedVM and make entry in /etc/fstab
       mount:
          path: /forms/shared
          src: /dev/datavg/sharedVM
          fstype: ext4
          opts: defaults
          dump: 1
          passno: 2
          state: mounted
     - name: Mount /forms/logsVM and make entry in /etc/fstab
       mount:
          path: /forms/logs
          src: /dev/datavg/logsVM
          fstype: ext4
          opts: defaults
          dump: 1
          passno: 2
          state: mounted
     - name: Mount /forms/apacheVM and make entry in /etc/fstab
       mount:
          path: /forms/apache24
          src: /dev/datavg/apacheVM
          fstype: ext4
          opts: defaults
          dump: 1
          passno: 2
          state: mounted
       when: "'ws' in inventory_hostname"
     - name: Mount /forms/tomcatVM and make entry in /etc/fstab
       mount:
          path: /forms/tomcat8
          src: /dev/datavg/tomcatVM
          fstype: ext4
          opts: defaults
          dump: 1
          passno: 2
          state: mounted
       when: "'as' in inventory_hostname"
          
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ cat CreatePartition.yml ls[Kcd ../
]0;hchada@CGDCSSL1047UL:~/EFS[hchada@CGDCSSL1047UL EFS]$ cd -
/home/hchada/EFS/ansible
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ ls
ansible.cfg                    [0m[01;32mcontext.xml[0m       copyKeys.yml         CreatePartsDevOps.yml  [01;34mCustomerConnect[0m  fetchhostname.yml  inventorycc           ping.yml         servers.yml  users.yml
[01;34mapache[0m                         copy              copyKey.yml          CreateUser.retry       delApctl.yml     [01;34mfinal[0m              [01;31mmaster-cisreport.zip[0m  [01;34mpyscritps[0m        [01;32mserver.xml[0m   [01;32mweb.xml[0m
CCServers.yml                  copyBinaries.yml  cpyhttpd.yml         CreateUsers.yml        deploy1.yml      gitcommands.txt    passwd                script.yml       stopFW.yml   yumPackages.yml
[01;34mcis-rhel-ansible-audit-master[0m  copyKeys.retry    CreatePartition.yml  CreateUser.yml         [01;31mdevel.zip[0m        inventory          passwd.txt            [01;34mselfsignedcerts[0m  [01;34mtomcat[0m
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ mol[K[K[Kmore C[K[K[K[K[K[Kcd ss[K[Kse
-bash: cd: se: No such file or directory
]0;hchada@CGDCSSL1047UL:~/EFS/ansible[hchada@CGDCSSL1047UL ansible]$ cd selfsignedcerts/
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/selfsignedcerts[hchada@CGDCSSL1047UL selfsignedcerts]$ ls
CreateCerts-pft1.retry  CreateCerts-pft.retry  CreateCerts.retry  getIP.yml      [0m[01;31mpyOpenSSL-0.15.1-1.el7.noarch.rpm[0m  [01;31mpyOpenSSL-19.0.0.tar.gz[0m
CreateCerts-pft1.yml    CreateCerts-pft.yml    CreateCerts.yml    insPyOSSL.yml  [01;34mpyOpenSSL-19.0.0[0m
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/selfsignedcerts[hchada@CGDCSSL1047UL selfsignedcerts]$ more CreateCerts-pft1.yml
- hosts:
    - "{{ var_host }}"
  become: true
  become_method: sudo
  tasks:
    - name: Ensure directory exists for local self-signed TLS certs.
      file:
       path: /etc/httpd/ssl 
       state: directory
    - name: Delete old Key files
      file:
        path: /etc/httpd/ssl/efspft1-.key
        state: absent
    - name: Generate an OpenSSL private key.
      openssl_privatekey:
         path: /etc/httpd/ssl/efspft1-.key
         size: 1024
         state: "{{ statte }}"
    - name: Generate an OpenSSL CSR.
      openssl_csr:
        path: /etc/httpd/ssl/efspft1-.csr
        privatekey_path: /etc/httpd/ssl/efspft1-.key
        country_name: US
        organization_name: DCSS
        organizational_unit_name: Env
        emailAddress: dcsstsenvironmensunit@dcss.ca.gov
        common_name: "100.95.20.94"
        subject_alt_name: "DNS:efspft1.cse.ca.gov, IP:100.95.20.65, IP:100.95.20.66, IP:100.95.20.94"
        state: "{{ statte }}"

    - name: Generate a Self Signed OpenSSL certificate.
      openssl_certificate:
        path: /etc/httpd/ssl/efspft1-.crt
        privatekey_path: /etc/httpd/ssl/efspft1-.key
        csr_path: /etc/httpd/ssl/efspft1-.csr
        signature_algorithms: sha256WithRSAEncryption
        provider: selfsigned
        state: "{{ statte }}"
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/selfsignedcerts[hchada@CGDCSSL1047UL selfsignedcerts]$ cd 
]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ clear
[3;J[H[2J]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ ls
1000  [0m[01;34mbinaries[0m  [01;34mCC[0m  dead.letter  Docker for Windows Installer.exe  [01;34mEFS[0m  [01;32mefsApp.war[0m  [01;34mflask[0m  hist.txt  issue.net  [01;32mmod_jk.so[0m  [01;34mmyconf[0m  outlist.txt  [01;34mpyscripts[0m  runansible.py  [01;34mssl[0m
]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ cd -
/home/hchada/EFS/ansible/selfsignedcerts
]0;hchada@CGDCSSL1047UL:~/EFS/ansible/selfsignedcerts[hchada@CGDCSSL1047UL selfsignedcerts]$ [K[hchada@CGDCSSL1047UL selfsignedcerts]$ [K[hchada@CGDCSSL1047UL selfsignedcerts]$ [K[hchada@CGDCSSL1047UL selfsignedcerts]$ 