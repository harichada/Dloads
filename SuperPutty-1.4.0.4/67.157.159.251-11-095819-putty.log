=~=~=~=~=~=~=~=~=~=~=~= PuTTY log 2019.10.11 09:58:19 =~=~=~=~=~=~=~=~=~=~=~=
Using username "hchada".
Pre-authentication banner message from server:
| UNAUTHORIZED ACCESS TO ANY STATE OF CALIFORNIA COMPUTING SYSTEM CONTAINING US
>  GOVERNMENT OR STATE OF CALIFORNIA INFORMATION IS A CRIMINAL VIOLATION OF PEN
> AL CODE SECTION 502 AND/OR APPLICABLE FEDERAL LAW AND IS SUBJECT TO CIVIL AND
>  CRIMINAL SANCTIONS.
| 
| Whoever knowingly or intentionally accesses a computing system without author
> ization or exceeding authorized access, and by means of such conduct, obtains
> , alters, damages, destroys, or discloses information, or prevents authorized
>  use of any data or computing resource owned by or operated for the State of 
> California shall be subject to disciplinary action, prosecution or both. Use 
> in a manner other than as intended by the State of California may result in t
> he forfeiture of access privileges. All computing system activities may be re
> corded and monitored. Individuals using these systems expressly consent to su
> ch monitoring and shall have no expectation of privacy in their use. Evidence
>  of possible misconduct or abuse may be provided to appropriate officials and
> /or law enforcement. No warranty is made for the computing resources that are
>  subject to this policy. Additionally, the State of California takes no respo
> nsibility of damages for the intentional misuse of these resources by any par
> ty.
| 
End of banner message from server
Last login: Fri Oct  4 16:03:58 2019 from 169.2.108.102
UNAUTHORIZED ACCESS TO ANY STATE OF CALIFORNIA COMPUTING SYSTEM CONTAINING US GOVERNMENT OR STATE OF CALIFORNIA INFORMATION IS A CRIMINAL VIOLATION OF PENAL CODE SECTION 502 AND/OR APPLICABLE FEDERAL LAW AND IS SUBJECT TO CIVIL AND CRIMINAL SANCTIONS.

Whoever knowingly or intentionally accesses a computing system without authorization or exceeding authorized access, and by means of such conduct, obtains, alters, damages, destroys, or discloses information, or prevents authorized use of any data or computing resource owned by or operated for the State of California shall be subject to disciplinary action, prosecution or both. Use in a manner other than as intended by the State of California may result in the forfeiture of access privileges. All computing system activities may be recorded and monitored. Individuals using these systems expressly consent to such monitoring and shall have no expectation of privacy in their use. Evidence of possible misconduct or abuse may be provided to appropriate officials and/or law enforcement. No warranty is made for the computing resources that are subject to this policy. Additionally, the State of California takes no responsibility of damages for the intentional misuse of these resources by any party.

]0;hchada@CGDCSSL1047UL:~[?1034h[hchada@CGDCSSL1047UL  ~]$ [K[A[hchada@CGDCSSL1047UL ~]$ clear
[3;J[H[2J]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ clear
[3;J[H[2J]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ ls
1000      Docker for Windows Installer.exe  [0m[01;32mefs-0.0.1-SNAPSHOT-0222.war[0m  [01;32mefs-sya03.war[0m  hist.txt   [01;34mmyconf[0m       runansible.py
[01;34mbinaries[0m  [01;34mEFS[0m                               [01;32mefsApp.war[0m                   [01;32mefs-syt06.war[0m  issue.net  outlist.txt  [01;34mssl[0m
[01;34mCC[0m        [01;32mefs-0.0.1-SNAPSHOT0222-new.war[0m    [01;32mefs-sya02.war[0m                [01;34mflask[0m          [01;32mmod_jk.so[0m  [01;34mpyscripts[0m
]0;hchada@CGDCSSL1047UL:~[hchada@CGDCSSL1047UL ~]$ cd flask
]0;hchada@CGDCSSL1047UL:~/flask[hchada@CGDCSSL1047UL flask]$ s
-bash: s: command not found
]0;hchada@CGDCSSL1047UL:~/flask[hchada@CGDCSSL1047UL flask]$ ls
[0m[01;34mflaskenv[0m  [01;34moreilly-intro-to-flask-video[0m
]0;hchada@CGDCSSL1047UL:~/flask[hchada@CGDCSSL1047UL flask]$ cd [K[K[Khistory | grep flask
   69  mkdir [01;31m[Kflask[m[K
   72  cd [01;31m[Kflask[m[K/
   74  python -m venv [01;31m[Kflask[m[Kenv
   78  python3 -m venv [01;31m[Kflask[m[Kenv
   79  source [01;31m[Kflask[m[Kenv/bin/activate
   82  pip install [01;31m[Kflask[m[K
   84  git clone https://github.com/miguelgrinberg/oreilly-intro-to-[01;31m[Kflask[m[K-video.git
   86  git clone https://github.com/miguelgrinberg/oreilly-intro-to-[01;31m[Kflask[m[K-video.git
   88  cd oreilly-intro-to-[01;31m[Kflask[m[K-video/
  214  cd [01;31m[Kflask[m[K
  250  cd [01;31m[Kflask[m[K/
  252  cd [01;31m[Kflask[m[Kenv/
  262  cd [01;31m[Kflask[m[K/
  264  cd oreilly-intro-to-[01;31m[Kflask[m[K-video/
  279  cd [01;31m[Kflask[m[K/
  281  cd [01;31m[Kflask[m[Kenv/
  285  cd oreilly-intro-to-[01;31m[Kflask[m[K-video/
  843  cd [01;31m[Kflask[m[K
  845  cd oreilly-intro-to-[01;31m[Kflask[m[K-video/
  849  cd [01;31m[Kflask[m[Kenv/
 1002  cd [01;31m[Kflask[m[K
 1005  history | grep [01;31m[Kflask[m[K
]0;hchada@CGDCSSL1047UL:~/flask[hchada@CGDCSSL1047UL flask]$ source flaskenv/bin/activate
]0;hchada@CGDCSSL1047UL:~/flask(flaskenv) [hchada@CGDCSSL1047UL flask]$ ls
[0m[01;34mflaskenv[0m  [01;34moreilly-intro-to-flask-video[0m
]0;hchada@CGDCSSL1047UL:~/flask(flaskenv) [hchada@CGDCSSL1047UL flask]$ cd oreilly-intro-to-flask-video/
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video(flaskenv) [hchada@CGDCSSL1047UL oreilly-intro-to-flask-video]$ ls
[0m[01;34m1a[0m  [01;34m1b[0m  [01;34m2a[0m  [01;34m2b[0m  [01;34m2c[0m  [01;34m2d[0m  [01;34m2e[0m  [01;34m2f[0m  [01;34m2g[0m  [01;34m2h[0m  [01;34m3a[0m  [01;34m3b[0m  [01;34m3c[0m  [01;34m3d[0m  [01;34m4a[0m  [01;34m4b[0m  [01;34m4c[0m  [01;34m5a[0m  [01;34m6a[0m  [01;34m6b[0m  [01;34m7a[0m  [01;34m8a[0m  [01;34m8b[0m  [01;34m8c[0m  [01;34m9a[0m  [01;34m9b[0m  [01;34m9c[0m  LICENSE  README.md  requirements.txt
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video(flaskenv) [hchada@CGDCSSL1047UL oreilly-intro-to-flask-video]$ ls
[0m[01;34m1a[0m  [01;34m1b[0m  [01;34m2a[0m  [01;34m2b[0m  [01;34m2c[0m  [01;34m2d[0m  [01;34m2e[0m  [01;34m2f[0m  [01;34m2g[0m  [01;34m2h[0m  [01;34m3a[0m  [01;34m3b[0m  [01;34m3c[0m  [01;34m3d[0m  [01;34m4a[0m  [01;34m4b[0m  [01;34m4c[0m  [01;34m5a[0m  [01;34m6a[0m  [01;34m6b[0m  [01;34m7a[0m  [01;34m8a[0m  [01;34m8b[0m  [01;34m8c[0m  [01;34m9a[0m  [01;34m9b[0m  [01;34m9c[0m  LICENSE  README.md  requirements.txt
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video(flaskenv) [hchada@CGDCSSL1047UL oreilly-intro-to-flask-video]$ cd 2b
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ ls
[0m[01;34mtemplates[0m  weather.py
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ /.we[K[K[K[K./wea[K[K[K[K[Kpython -f weather.py 
Unknown option: -f
usage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...
Try `python -h' for more information.
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ python weather.py 
 * Serving Flask app "weather" (lazy loading)
 * Environment: production
[31m   WARNING: This is a development server. Do not use it in a production deployment.[0m
[2m   Use a production WSGI server instead.[0m
 * Debug mode: on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 488-056-541
^C]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ clear
[3;J[H[2J]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ ls
[0m[01;34mtemplates[0m  weather.py
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ more weather.py 
from flask import Flask, render_template
app = Flask(__name__)


@app.route('/')
def index():
    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July',
              'August', 'September', 'October', 'November', 'December']
    return render_template('index.html', city='Portland, OR', months=months)


if __name__ == '__main__':
    app.run(debug=True)
]0;hchada@CGDCSSL1047UL:~/flask/oreilly-intro-to-flask-video/2b(flaskenv) [hchada@CGDCSSL1047UL 2b]$ exit
logout
